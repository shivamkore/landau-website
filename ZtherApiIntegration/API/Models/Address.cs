// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace ZtherApiIntegration.API.Models
{
    public partial class Address
    {
        private string _city;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string City
        {
            get { return this._city; }
            set { this._city = value; }
        }
        
        private string _state;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private string _street1;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Street1
        {
            get { return this._street1; }
            set { this._street1 = value; }
        }
        
        private string _street2;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Street2
        {
            get { return this._street2; }
            set { this._street2 = value; }
        }
        
        private string _zipcode;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Zipcode
        {
            get { return this._zipcode; }
            set { this._zipcode = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Address class.
        /// </summary>
        public Address()
        {
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Address
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.City == null)
            {
                throw new ArgumentNullException("City");
            }
            if (this.State == null)
            {
                throw new ArgumentNullException("State");
            }
            if (this.Street1 == null)
            {
                throw new ArgumentNullException("Street1");
            }
            if (this.Zipcode == null)
            {
                throw new ArgumentNullException("Zipcode");
            }
            if (this.City != null)
            {
                outputObject["city"] = this.City;
            }
            if (this.State != null)
            {
                outputObject["state"] = this.State;
            }
            if (this.Street1 != null)
            {
                outputObject["street1"] = this.Street1;
            }
            if (this.Street2 != null)
            {
                outputObject["street2"] = this.Street2;
            }
            if (this.Zipcode != null)
            {
                outputObject["zipcode"] = this.Zipcode;
            }
            return outputObject;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken cityValue = inputObject["city"];
                if (cityValue != null && cityValue.Type != JTokenType.Null)
                {
                    this.City = ((string)cityValue);
                }
                JToken stateValue = inputObject["state"];
                if (stateValue != null && stateValue.Type != JTokenType.Null)
                {
                    this.State = ((string)stateValue);
                }
                JToken street1Value = inputObject["street1"];
                if (street1Value != null && street1Value.Type != JTokenType.Null)
                {
                    this.Street1 = ((string)street1Value);
                }
                JToken street2Value = inputObject["street2"];
                if (street2Value != null && street2Value.Type != JTokenType.Null)
                {
                    this.Street2 = ((string)street2Value);
                }
                JToken zipcodeValue = inputObject["zipcode"];
                if (zipcodeValue != null && zipcodeValue.Type != JTokenType.Null)
                {
                    this.Zipcode = ((string)zipcodeValue);
                }
            }
        }
    }
}
