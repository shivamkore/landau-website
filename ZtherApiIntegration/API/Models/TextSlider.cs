// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using ZtherApiIntegration.API.Models;

namespace ZtherApiIntegration.API.Models
{
    public partial class TextSlider
    {
        private string _brand;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Brand
        {
            get { return this._brand; }
            set { this._brand = value; }
        }
        
        private IList<TextSliderDescription> _descriptions;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<TextSliderDescription> Descriptions
        {
            get { return this._descriptions; }
            set { this._descriptions = value; }
        }
        
        private string _title;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Title
        {
            get { return this._title; }
            set { this._title = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the TextSlider class.
        /// </summary>
        public TextSlider()
        {
            this.Descriptions = new LazyList<TextSliderDescription>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken brandValue = inputObject["brand"];
                if (brandValue != null && brandValue.Type != JTokenType.Null)
                {
                    this.Brand = ((string)brandValue);
                }
                JToken descriptionsSequence = ((JToken)inputObject["descriptions"]);
                if (descriptionsSequence != null && descriptionsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken descriptionsValue in ((JArray)descriptionsSequence))
                    {
                        TextSliderDescription textSliderDescription = new TextSliderDescription();
                        textSliderDescription.DeserializeJson(descriptionsValue);
                        this.Descriptions.Add(textSliderDescription);
                    }
                }
                JToken titleValue = inputObject["title"];
                if (titleValue != null && titleValue.Type != JTokenType.Null)
                {
                    this.Title = ((string)titleValue);
                }
            }
        }
    }
}
