// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;
using ZtherApiIntegration.API.Models;

namespace ZtherApiIntegration.API.Models
{
    public partial class GroupOrder
    {
        private Address _address;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Address Address
        {
            get { return this._address; }
            set { this._address = value; }
        }
        
        private string _areYouSellingToOther;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AreYouSellingToOther
        {
            get { return this._areYouSellingToOther; }
            set { this._areYouSellingToOther = value; }
        }
        
        private bool? _areYouTheDecisionMaker;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? AreYouTheDecisionMaker
        {
            get { return this._areYouTheDecisionMaker; }
            set { this._areYouTheDecisionMaker = value; }
        }
        
        private string _brand;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Brand
        {
            get { return this._brand; }
            set { this._brand = value; }
        }
        
        private string _cell;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Cell
        {
            get { return this._cell; }
            set { this._cell = value; }
        }
        
        private string _comments;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Comments
        {
            get { return this._comments; }
            set { this._comments = value; }
        }
        
        private string _companyName;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string CompanyName
        {
            get { return this._companyName; }
            set { this._companyName = value; }
        }
        
        private string _email;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Email
        {
            get { return this._email; }
            set { this._email = value; }
        }
        
        private DateTimeOffset? _entryDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? EntryDate
        {
            get { return this._entryDate; }
            set { this._entryDate = value; }
        }
        
        private string _firstName;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string FirstName
        {
            get { return this._firstName; }
            set { this._firstName = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? ID
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _ifNotDecisionMakerWhoIs;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string IfNotDecisionMakerWhoIs
        {
            get { return this._ifNotDecisionMakerWhoIs; }
            set { this._ifNotDecisionMakerWhoIs = value; }
        }
        
        private Industry _industry;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Industry Industry
        {
            get { return this._industry; }
            set { this._industry = value; }
        }
        
        private string _lastName;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string LastName
        {
            get { return this._lastName; }
            set { this._lastName = value; }
        }
        
        private bool? _needCustomized;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? NeedCustomized
        {
            get { return this._needCustomized; }
            set { this._needCustomized = value; }
        }
        
        private bool? _needEmbroidery;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? NeedEmbroidery
        {
            get { return this._needEmbroidery; }
            set { this._needEmbroidery = value; }
        }
        
        private bool? _needLabCoats;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? NeedLabCoats
        {
            get { return this._needLabCoats; }
            set { this._needLabCoats = value; }
        }
        
        private bool? _needNonMedical;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? NeedNonMedical
        {
            get { return this._needNonMedical; }
            set { this._needNonMedical = value; }
        }
        
        private bool? _needPrintedTops;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? NeedPrintedTops
        {
            get { return this._needPrintedTops; }
            set { this._needPrintedTops = value; }
        }
        
        private bool? _needScrubs;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? NeedScrubs
        {
            get { return this._needScrubs; }
            set { this._needScrubs = value; }
        }
        
        private string _numberOfOutfitted;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string NumberOfOutfitted
        {
            get { return this._numberOfOutfitted; }
            set { this._numberOfOutfitted = value; }
        }
        
        private string _phone;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Phone
        {
            get { return this._phone; }
            set { this._phone = value; }
        }
        
        private string _web;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Web
        {
            get { return this._web; }
            set { this._web = value; }
        }
        
        private string _whichAreYouSeekingToOutfit;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string WhichAreYouSeekingToOutfit
        {
            get { return this._whichAreYouSeekingToOutfit; }
            set { this._whichAreYouSeekingToOutfit = value; }
        }
        
        private bool? _whoWillWearNonMedical;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? WhoWillWearNonMedical
        {
            get { return this._whoWillWearNonMedical; }
            set { this._whoWillWearNonMedical = value; }
        }
        
        private bool? _whoWillWearPatientCare;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? WhoWillWearPatientCare
        {
            get { return this._whoWillWearPatientCare; }
            set { this._whoWillWearPatientCare = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the GroupOrder class.
        /// </summary>
        public GroupOrder()
        {
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type GroupOrder
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Brand == null)
            {
                throw new ArgumentNullException("Brand");
            }
            if (this.CompanyName == null)
            {
                throw new ArgumentNullException("CompanyName");
            }
            if (this.Email == null)
            {
                throw new ArgumentNullException("Email");
            }
            if (this.FirstName == null)
            {
                throw new ArgumentNullException("FirstName");
            }
            if (this.LastName == null)
            {
                throw new ArgumentNullException("LastName");
            }
            if (this.Phone == null)
            {
                throw new ArgumentNullException("Phone");
            }
            if (this.Address != null)
            {
                outputObject["address"] = this.Address.SerializeJson(null);
            }
            if (this.AreYouSellingToOther != null)
            {
                outputObject["areYouSellingToOther"] = this.AreYouSellingToOther;
            }
            if (this.AreYouTheDecisionMaker != null)
            {
                outputObject["areYouTheDecisionMaker"] = this.AreYouTheDecisionMaker.Value;
            }
            if (this.Brand != null)
            {
                outputObject["brand"] = this.Brand;
            }
            if (this.Cell != null)
            {
                outputObject["cell"] = this.Cell;
            }
            if (this.Comments != null)
            {
                outputObject["comments"] = this.Comments;
            }
            if (this.CompanyName != null)
            {
                outputObject["companyName"] = this.CompanyName;
            }
            if (this.Email != null)
            {
                outputObject["email"] = this.Email;
            }
            if (this.EntryDate != null)
            {
                outputObject["entryDate"] = this.EntryDate.Value;
            }
            if (this.FirstName != null)
            {
                outputObject["firstName"] = this.FirstName;
            }
            if (this.ID != null)
            {
                outputObject["id"] = this.ID.Value;
            }
            if (this.IfNotDecisionMakerWhoIs != null)
            {
                outputObject["ifNotDecisionMakerWhoIs"] = this.IfNotDecisionMakerWhoIs;
            }
            if (this.Industry != null)
            {
                outputObject["industry"] = this.Industry.SerializeJson(null);
            }
            if (this.LastName != null)
            {
                outputObject["lastName"] = this.LastName;
            }
            if (this.NeedCustomized != null)
            {
                outputObject["needCustomized"] = this.NeedCustomized.Value;
            }
            if (this.NeedEmbroidery != null)
            {
                outputObject["needEmbroidery"] = this.NeedEmbroidery.Value;
            }
            if (this.NeedLabCoats != null)
            {
                outputObject["needLabCoats"] = this.NeedLabCoats.Value;
            }
            if (this.NeedNonMedical != null)
            {
                outputObject["needNonMedical"] = this.NeedNonMedical.Value;
            }
            if (this.NeedPrintedTops != null)
            {
                outputObject["needPrintedTops"] = this.NeedPrintedTops.Value;
            }
            if (this.NeedScrubs != null)
            {
                outputObject["needScrubs"] = this.NeedScrubs.Value;
            }
            if (this.NumberOfOutfitted != null)
            {
                outputObject["numberOfOutfitted"] = this.NumberOfOutfitted;
            }
            if (this.Phone != null)
            {
                outputObject["phone"] = this.Phone;
            }
            if (this.Web != null)
            {
                outputObject["web"] = this.Web;
            }
            if (this.WhichAreYouSeekingToOutfit != null)
            {
                outputObject["whichAreYouSeekingToOutfit"] = this.WhichAreYouSeekingToOutfit;
            }
            if (this.WhoWillWearNonMedical != null)
            {
                outputObject["whoWillWearNonMedical"] = this.WhoWillWearNonMedical.Value;
            }
            if (this.WhoWillWearPatientCare != null)
            {
                outputObject["whoWillWearPatientCare"] = this.WhoWillWearPatientCare.Value;
            }
            return outputObject;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken addressValue = inputObject["address"];
                if (addressValue != null && addressValue.Type != JTokenType.Null)
                {
                    Address address = new Address();
                    address.DeserializeJson(addressValue);
                    this.Address = address;
                }
                JToken areYouSellingToOtherValue = inputObject["areYouSellingToOther"];
                if (areYouSellingToOtherValue != null && areYouSellingToOtherValue.Type != JTokenType.Null)
                {
                    this.AreYouSellingToOther = ((string)areYouSellingToOtherValue);
                }
                JToken areYouTheDecisionMakerValue = inputObject["areYouTheDecisionMaker"];
                if (areYouTheDecisionMakerValue != null && areYouTheDecisionMakerValue.Type != JTokenType.Null)
                {
                    this.AreYouTheDecisionMaker = ((bool)areYouTheDecisionMakerValue);
                }
                JToken brandValue = inputObject["brand"];
                if (brandValue != null && brandValue.Type != JTokenType.Null)
                {
                    this.Brand = ((string)brandValue);
                }
                JToken cellValue = inputObject["cell"];
                if (cellValue != null && cellValue.Type != JTokenType.Null)
                {
                    this.Cell = ((string)cellValue);
                }
                JToken commentsValue = inputObject["comments"];
                if (commentsValue != null && commentsValue.Type != JTokenType.Null)
                {
                    this.Comments = ((string)commentsValue);
                }
                JToken companyNameValue = inputObject["companyName"];
                if (companyNameValue != null && companyNameValue.Type != JTokenType.Null)
                {
                    this.CompanyName = ((string)companyNameValue);
                }
                JToken emailValue = inputObject["email"];
                if (emailValue != null && emailValue.Type != JTokenType.Null)
                {
                    this.Email = ((string)emailValue);
                }
                JToken entryDateValue = inputObject["entryDate"];
                if (entryDateValue != null && entryDateValue.Type != JTokenType.Null)
                {
                    this.EntryDate = ((DateTimeOffset)entryDateValue);
                }
                JToken firstNameValue = inputObject["firstName"];
                if (firstNameValue != null && firstNameValue.Type != JTokenType.Null)
                {
                    this.FirstName = ((string)firstNameValue);
                }
                JToken idValue = inputObject["id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.ID = ((int)idValue);
                }
                JToken ifNotDecisionMakerWhoIsValue = inputObject["ifNotDecisionMakerWhoIs"];
                if (ifNotDecisionMakerWhoIsValue != null && ifNotDecisionMakerWhoIsValue.Type != JTokenType.Null)
                {
                    this.IfNotDecisionMakerWhoIs = ((string)ifNotDecisionMakerWhoIsValue);
                }
                JToken industryValue = inputObject["industry"];
                if (industryValue != null && industryValue.Type != JTokenType.Null)
                {
                    Industry industry = new Industry();
                    industry.DeserializeJson(industryValue);
                    this.Industry = industry;
                }
                JToken lastNameValue = inputObject["lastName"];
                if (lastNameValue != null && lastNameValue.Type != JTokenType.Null)
                {
                    this.LastName = ((string)lastNameValue);
                }
                JToken needCustomizedValue = inputObject["needCustomized"];
                if (needCustomizedValue != null && needCustomizedValue.Type != JTokenType.Null)
                {
                    this.NeedCustomized = ((bool)needCustomizedValue);
                }
                JToken needEmbroideryValue = inputObject["needEmbroidery"];
                if (needEmbroideryValue != null && needEmbroideryValue.Type != JTokenType.Null)
                {
                    this.NeedEmbroidery = ((bool)needEmbroideryValue);
                }
                JToken needLabCoatsValue = inputObject["needLabCoats"];
                if (needLabCoatsValue != null && needLabCoatsValue.Type != JTokenType.Null)
                {
                    this.NeedLabCoats = ((bool)needLabCoatsValue);
                }
                JToken needNonMedicalValue = inputObject["needNonMedical"];
                if (needNonMedicalValue != null && needNonMedicalValue.Type != JTokenType.Null)
                {
                    this.NeedNonMedical = ((bool)needNonMedicalValue);
                }
                JToken needPrintedTopsValue = inputObject["needPrintedTops"];
                if (needPrintedTopsValue != null && needPrintedTopsValue.Type != JTokenType.Null)
                {
                    this.NeedPrintedTops = ((bool)needPrintedTopsValue);
                }
                JToken needScrubsValue = inputObject["needScrubs"];
                if (needScrubsValue != null && needScrubsValue.Type != JTokenType.Null)
                {
                    this.NeedScrubs = ((bool)needScrubsValue);
                }
                JToken numberOfOutfittedValue = inputObject["numberOfOutfitted"];
                if (numberOfOutfittedValue != null && numberOfOutfittedValue.Type != JTokenType.Null)
                {
                    this.NumberOfOutfitted = ((string)numberOfOutfittedValue);
                }
                JToken phoneValue = inputObject["phone"];
                if (phoneValue != null && phoneValue.Type != JTokenType.Null)
                {
                    this.Phone = ((string)phoneValue);
                }
                JToken webValue = inputObject["web"];
                if (webValue != null && webValue.Type != JTokenType.Null)
                {
                    this.Web = ((string)webValue);
                }
                JToken whichAreYouSeekingToOutfitValue = inputObject["whichAreYouSeekingToOutfit"];
                if (whichAreYouSeekingToOutfitValue != null && whichAreYouSeekingToOutfitValue.Type != JTokenType.Null)
                {
                    this.WhichAreYouSeekingToOutfit = ((string)whichAreYouSeekingToOutfitValue);
                }
                JToken whoWillWearNonMedicalValue = inputObject["whoWillWearNonMedical"];
                if (whoWillWearNonMedicalValue != null && whoWillWearNonMedicalValue.Type != JTokenType.Null)
                {
                    this.WhoWillWearNonMedical = ((bool)whoWillWearNonMedicalValue);
                }
                JToken whoWillWearPatientCareValue = inputObject["whoWillWearPatientCare"];
                if (whoWillWearPatientCareValue != null && whoWillWearPatientCareValue.Type != JTokenType.Null)
                {
                    this.WhoWillWearPatientCare = ((bool)whoWillWearPatientCareValue);
                }
            }
        }
    }
}
