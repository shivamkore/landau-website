// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using System.Collections.Generic;

namespace ZtherApiIntegration.API.Models
{
    public partial class Product
    {
        private string _availableSize;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AvailableSize
        {
            get { return this._availableSize; }
            set { this._availableSize = value; }
        }
        
        private string _brand;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Brand
        {
            get { return this._brand; }
            set { this._brand = value; }
        }
        
        private string _brandDescription;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string BrandDescription
        {
            get { return this._brandDescription; }
            set { this._brandDescription = value; }
        }
        
        private Breadcrumb _breadcrumb;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Breadcrumb Breadcrumb
        {
            get { return this._breadcrumb; }
            set { this._breadcrumb = value; }
        }
        
        private bool? _enabled;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? Enabled
        {
            get { return this._enabled; }
            set { this._enabled = value; }
        }
        
        private string _gender;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Gender
        {
            get { return this._gender; }
            set { this._gender = value; }
        }

        private string _fitRiseWaist;

        /// <summary>
        /// Optional.
        /// </summary>
        public string FitRiseWaist
        {
            get { return this._fitRiseWaist; }
            set { this._fitRiseWaist = value; }
        }

        private Image _image;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Image Image
        {
            get { return this._image; }
            set { this._image = value; }
        }
        
        private bool? _isForGroup;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? IsForGroup
        {
            get { return this._isForGroup; }
            set { this._isForGroup = value; }
        }
        
        private bool? _isNew;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? IsNew
        {
            get { return this._isNew; }
            set { this._isNew = value; }
        }
        
        private bool? _isPopular;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? IsPopular
        {
            get { return this._isPopular; }
            set { this._isPopular = value; }
        }
        
        private bool? _isSolid;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? IsSolid
        {
            get { return this._isSolid; }
            set { this._isSolid = value; }
        }
        
        private string _material;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Material
        {
            get { return this._material; }
            set { this._material = value; }
        }
        
        private string _nextProduct;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string NextProduct
        {
            get { return this._nextProduct; }
            set { this._nextProduct = value; }
        }
        
        private string _previousProduct;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string PreviousProduct
        {
            get { return this._previousProduct; }
            set { this._previousProduct = value; }
        }
        
        private string _productCode;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ProductCode
        {
            get { return this._productCode; }
            set { this._productCode = value; }
        }
        
        private string _productDescription;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ProductDescription
        {
            get { return this._productDescription; }
            set { this._productDescription = value; }
        }
        
        private string _productName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ProductName
        {
            get { return this._productName; }
            set { this._productName = value; }
        }
        
        private string _productType;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ProductType
        {
            get { return this._productType; }
            set { this._productType = value; }
        }
        
        private string _productTypeDescription;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ProductTypeDescription
        {
            get { return this._productTypeDescription; }
            set { this._productTypeDescription = value; }
        }
        
        private Seo _seo;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Seo Seo
        {
            get { return this._seo; }
            set { this._seo = value; }
        }
        
        private IList<Coordinate> _sockCollections;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Coordinate> SockCollections
        {
            get { return this._sockCollections; }
            set { this._sockCollections = value; }
        }
        
        private string _subBrand;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string SubBrand
        {
            get { return this._subBrand; }
            set { this._subBrand = value; }
        }
        
        private string _subBrandDescription;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string SubBrandDescription
        {
            get { return this._subBrandDescription; }
            set { this._subBrandDescription = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        public Product()
        {
            this.SockCollections = new LazyList<Coordinate>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken availableSizeValue = inputObject["availableSize"];
                if (availableSizeValue != null && availableSizeValue.Type != JTokenType.Null)
                {
                    this.AvailableSize = ((string)availableSizeValue);
                }
                JToken brandValue = inputObject["brand"];
                if (brandValue != null && brandValue.Type != JTokenType.Null)
                {
                    this.Brand = ((string)brandValue);
                }
                JToken brandDescriptionValue = inputObject["brandDescription"];
                if (brandDescriptionValue != null && brandDescriptionValue.Type != JTokenType.Null)
                {
                    this.BrandDescription = ((string)brandDescriptionValue);
                }
                JToken breadcrumbValue = inputObject["breadcrumb"];
                if (breadcrumbValue != null && breadcrumbValue.Type != JTokenType.Null)
                {
                    Breadcrumb breadcrumb = new Breadcrumb();
                    breadcrumb.DeserializeJson(breadcrumbValue);
                    this.Breadcrumb = breadcrumb;
                }
                JToken enabledValue = inputObject["enabled"];
                if (enabledValue != null && enabledValue.Type != JTokenType.Null)
                {
                    this.Enabled = ((bool)enabledValue);
                }
                JToken genderValue = inputObject["gender"];
                if (genderValue != null && genderValue.Type != JTokenType.Null)
                {
                    this.Gender = ((string)genderValue);
                }
                JToken fitRiseWaistValue = inputObject["fitRiseWaist"];
                if (fitRiseWaistValue != null && fitRiseWaistValue.Type != JTokenType.Null)
                {
                    this.FitRiseWaist = ((string)fitRiseWaistValue);
                }
                JToken imageValue = inputObject["image"];
                if (imageValue != null && imageValue.Type != JTokenType.Null)
                {
                    Image image = new Image();
                    image.DeserializeJson(imageValue);
                    this.Image = image;
                }
                JToken isForGroupValue = inputObject["isForGroup"];
                if (isForGroupValue != null && isForGroupValue.Type != JTokenType.Null)
                {
                    this.IsForGroup = ((bool)isForGroupValue);
                }
                JToken isNewValue = inputObject["isNew"];
                if (isNewValue != null && isNewValue.Type != JTokenType.Null)
                {
                    this.IsNew = ((bool)isNewValue);
                }
                JToken isPopularValue = inputObject["isPopular"];
                if (isPopularValue != null && isPopularValue.Type != JTokenType.Null)
                {
                    this.IsPopular = ((bool)isPopularValue);
                }
                JToken isSolidValue = inputObject["isSolid"];
                if (isSolidValue != null && isSolidValue.Type != JTokenType.Null)
                {
                    this.IsSolid = ((bool)isSolidValue);
                }
                JToken materialValue = inputObject["material"];
                if (materialValue != null && materialValue.Type != JTokenType.Null)
                {
                    this.Material = ((string)materialValue);
                }
                JToken nextProductValue = inputObject["nextProduct"];
                if (nextProductValue != null && nextProductValue.Type != JTokenType.Null)
                {
                    this.NextProduct = ((string)nextProductValue);
                }
                JToken previousProductValue = inputObject["previousProduct"];
                if (previousProductValue != null && previousProductValue.Type != JTokenType.Null)
                {
                    this.PreviousProduct = ((string)previousProductValue);
                }
                JToken productCodeValue = inputObject["productCode"];
                if (productCodeValue != null && productCodeValue.Type != JTokenType.Null)
                {
                    this.ProductCode = ((string)productCodeValue);
                }
                JToken productDescriptionValue = inputObject["productDescription"];
                if (productDescriptionValue != null && productDescriptionValue.Type != JTokenType.Null)
                {
                    this.ProductDescription = ((string)productDescriptionValue);
                }
                JToken productNameValue = inputObject["productName"];
                if (productNameValue != null && productNameValue.Type != JTokenType.Null)
                {
                    this.ProductName = ((string)productNameValue);
                }
                JToken productTypeValue = inputObject["productType"];
                if (productTypeValue != null && productTypeValue.Type != JTokenType.Null)
                {
                    this.ProductType = ((string)productTypeValue);
                }
                JToken productTypeDescriptionValue = inputObject["productTypeDescription"];
                if (productTypeDescriptionValue != null && productTypeDescriptionValue.Type != JTokenType.Null)
                {
                    this.ProductTypeDescription = ((string)productTypeDescriptionValue);
                }
                JToken seoValue = inputObject["seo"];
                if (seoValue != null && seoValue.Type != JTokenType.Null)
                {
                    Seo seo = new Seo();
                    seo.DeserializeJson(seoValue);
                    this.Seo = seo;
                }
                JToken sockCollectionsSequence = ((JToken)inputObject["sockCollections"]);
                if (sockCollectionsSequence != null && sockCollectionsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken sockCollectionsValue in ((JArray)sockCollectionsSequence))
                    {
                        Coordinate coordinate = new Coordinate();
                        coordinate.DeserializeJson(sockCollectionsValue);
                        this.SockCollections.Add(coordinate);
                    }
                }
                JToken subBrandValue = inputObject["subBrand"];
                if (subBrandValue != null && subBrandValue.Type != JTokenType.Null)
                {
                    this.SubBrand = ((string)subBrandValue);
                }
                JToken subBrandDescriptionValue = inputObject["subBrandDescription"];
                if (subBrandDescriptionValue != null && subBrandDescriptionValue.Type != JTokenType.Null)
                {
                    this.SubBrandDescription = ((string)subBrandDescriptionValue);
                }
            }
        }
    }
}
