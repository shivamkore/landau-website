// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using ZtherApiIntegration.API.Models;

namespace ZtherApiIntegration.API
{
    public partial interface IRetailers
    {
        /// <param name='city'>
        /// Required.
        /// </param>
        /// <param name='state'>
        /// Required.
        /// </param>
        /// <param name='diamond'>
        /// Optional.
        /// </param>
        /// <param name='radius'>
        /// Optional.
        /// </param>
        /// <param name='page'>
        /// Optional.
        /// </param>
        /// <param name='pagesize'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<RetailerList>> FindByCityAndStateWithOperationResponseAsync(string city, string state, bool? diamond = null, double? radius = null, int? page = null, int? pagesize = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='country'>
        /// Required.
        /// </param>
        /// <param name='page'>
        /// Optional.
        /// </param>
        /// <param name='pagesize'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<RetailerList>> FindByCountryWithOperationResponseAsync(string brand, string country, int? page = null, int? pagesize = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='zipcode'>
        /// Required.
        /// </param>
        /// <param name='diamond'>
        /// Optional.
        /// </param>
        /// <param name='radius'>
        /// Optional.
        /// </param>
        /// <param name='page'>
        /// Optional.
        /// </param>
        /// <param name='pagesize'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<RetailerList>> FindByZipcodeWithOperationResponseAsync(string zipcode, bool? diamond = null, double? radius = null, int? page = null, int? pagesize = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='partial'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<BaseModelRetailer>> GetAllOnlineByBrandWithOperationResponseAsync(string code, bool? partial = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<BaseModelRetailer>> GetAllPremierWithOperationResponseAsync(CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='account'>
        /// Required.
        /// </param>
        /// <param name='country'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<Retailer>> GetByAccountWithOperationResponseAsync(string account, string country = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<BaseModelRetailerLink>> GetAllBuyNowWithOperationResponseAsync(string brand, string code, CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<BaseModelRetailerLink>> GetAllWhereToBuyWithOperationResponseAsync(string brand, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
