// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using ZtherApiIntegration.API.Models;

namespace ZtherApiIntegration.API
{
    public partial interface IProducts
    {
        /// <param name='brand'>
        /// Optional.
        /// </param>
        /// <param name='page'>
        /// Optional.
        /// </param>
        /// <param name='pagesize'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ProductList>> GetAllWithOperationResponseAsync(string brand = null, int? page = null, int? pagesize = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<BaseModelProduct>> GetAllByProductCodesWithOperationResponseAsync(IList<string> code, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ColorList>> GetAllColorByProductWithOperationResponseAsync(string code, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='size'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ColorList>> GetAllColorByProductAndSizeWithOperationResponseAsync(string code, string size, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='sizeCategory'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ColorList>> GetAllColorByProductAndSizeCategoryWithOperationResponseAsync(string code, string sizeCategory, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<CoordinateList>> GetAllCoordinateByProductWithOperationResponseAsync(string code, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<SizeList>> GetAllSizeByProductWithOperationResponseAsync(string code, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='color'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<SizeList>> GetAllSizeByProductAndColorWithOperationResponseAsync(string code, string color, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<VideoList>> GetAllVideoByProductWithOperationResponseAsync(string code, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<Product>> GetByProductWithOperationResponseAsync(string code, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='keyword'>
        /// Required.
        /// </param>
        /// <param name='page'>
        /// Optional.
        /// </param>
        /// <param name='pagesize'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ProductList>> SearchWithOperationResponseAsync(string keyword, int? page = null, int? pagesize = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='model'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<CoordinateList>> UpdateWithOperationResponseAsync(string code, ProductUpdate model, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
