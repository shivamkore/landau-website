// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using ZtherApiIntegration.API.Models;

namespace ZtherApiIntegration.API
{
    public partial interface ICatalogs
    {
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='gender'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<CategoryList>> GetAllCategoryByBrandWithOperationResponseAsync(string brand, string gender, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='gender'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<CollectionList>> GetAllCollectionByBrandWithOperationResponseAsync(string brand, string gender, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ColorItemList>> GetAllColorByBrandWithOperationResponseAsync(string brand, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<GenderList>> GetAllGenderByBrandWithOperationResponseAsync(string brand, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<FitTypeList>> GetAllPantFitTypeByBrandWithOperationResponseAsync(string brand, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<SizeItemList>> GetAllSizeByBrandWithOperationResponseAsync(string brand, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='gender'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<SizeItemList>> GetAllSizeByGenderWithOperationResponseAsync(string gender, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<SortByList>> GetAllSortByByBrandWithOperationResponseAsync(string brand, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='gender'>
        /// Required.
        /// </param>
        /// <param name='collection'>
        /// Optional.
        /// </param>
        /// <param name='category'>
        /// Optional.
        /// </param>
        /// <param name='isnew'>
        /// Optional.
        /// </param>
        /// <param name='fittype'>
        /// Optional.
        /// </param>
        /// <param name='size'>
        /// Optional.
        /// </param>
        /// <param name='color'>
        /// Optional.
        /// </param>
        /// <param name='sort'>
        /// Optional.
        /// </param>
        /// <param name='page'>
        /// Optional.
        /// </param>
        /// <param name='pagesize'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ProductCatalogList>> GetProductsAsyncWithOperationResponseAsync(string brand, string gender, string collection = null, string category = null, string isnew = null, IList<string> fittype = null, IList<string> size = null, IList<string> color = null, string sort = null, int? page = null, int? pagesize = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='brand'>
        /// Required.
        /// </param>
        /// <param name='keyword'>
        /// Required.
        /// </param>
        /// <param name='page'>
        /// Optional.
        /// </param>
        /// <param name='pagesize'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<SearchResultList>> SearchWithOperationResponseAsync(string brand, string keyword, int? page = null, int? pagesize = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
