@using ZtherApiIntegration.Models.Catalog
@using ZtherApiIntegration.Common
@model CatalogModel

@for (int i = 4; i < Model.ProductList.Products.Count; i += 4)
{<div class="product_row">
        <div class="mobile_row">
            @for (int j = i; j < i + 4 && j < Model.ProductList.Products.Count; j++)
            {
                var aProd = Model.ProductList.Products[j];

                <div class="product">
                    <div class="view_details_cta"><div class="box">View Details</div></div>
                    <a href="@UrlBuilder.BuildProductDetailUrl( Model.Selections.Breadcrumb, aProd.Code, aProd.Name)">
                        <div class="img_container">
                            <img class="product_img" srcset="@aProd.Image" alt="@aProd.Name" />
                            @if (aProd.IsNew)
                            {
                                <div class="new_tag"></div>
                            }
                            else if (aProd.HasNewColors)
                            {
                                <div class="new_tag new_colors"></div>
                            }
                        </div>
                        <div class="footer">
                            <div class="text">@aProd.Name</div>
                            <div class="number">@aProd.Code</div>
                            <div id="@String.Concat("pr-star-rating-", j.ToString())" class="pr-star-rating"></div>
                        </div>
                    </a>
                </div>


                if (j == (i + 1) && (i + 3) <= Model.ProductList.Products.Count)
                {
                @:</div>
                @:<div class="mobile_row">
                }
            }
        </div>
    </div>
}

<div class="bottom_pagination">
    <div class="left">
        <a class="back_to_top">Back to Top</a>
    </div>
    <div id="bottomPagination">
        @Html.Partial("~/Views/Partials/Catalog/_PaginationPartial.cshtml", Model.ProductList.Pagination)
    </div>
</div>

@* Power Review scripts for rendering category star review  rating. *@
<script type="text/javascript">

    $(function () {

        var arrayOfCategorySnippet = [];

        function GetCategoryItem(productCode, index) {
            return {
                locale: '@Model.PowerReview.Locale',
                merchant_group_id: '@Model.PowerReview.Merchant_Group_Id',
                page_id: productCode,
                merchant_id: '@Model.PowerReview.Merchant_Id',
                api_key: '@Model.PowerReview.API_Key',
                components: {
                    CategorySnippet: 'pr-star-rating-' + index
                }
            };
        }

        var rowsProductList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ProductList.Products));

        if (rowsProductList.length > 0) {

            var arrayOfCategorySnippet = [];

            for (var x = 0; x < rowsProductList.length; x++) {

                var code = rowsProductList[x].Code;

                arrayOfCategorySnippet.push(GetCategoryItem(code, x));
            }

            POWERREVIEWS.display.render(arrayOfCategorySnippet);
        }
    });

</script>
