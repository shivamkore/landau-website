@using ZtherApiIntegration.Models.Contact
@using ZtherApiIntegration.Common
@using Recaptcha.Web.Mvc
@model ContactModel

<div id="contact">
    <div class="top">
        <h1 class="header">Contact Us</h1>
        <div class="sub_header">Have a comment, question, or suggestion about Landau?</div>
        <div class="body">If so, we'd love to hear from you by completing the form below. All questions will be responded to within three business days.</div>
    </div>
    <div class="form_container">

        <!-- FORM Begin -->
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @action = this.Request.Url.AbsoluteUri }))
        {
            @Html.ValidationSummary(true)

        <div class="form-row">
            <div class="name_container left">
                <label class="">
                    First Name
                    <span class="asterisk">*</span>
                </label>
                @Html.TextBoxFor(ContactModel => ContactModel.FirstName, new { type = "text", required = "required" })
                @Html.ValidationMessageFor(ContactModel => ContactModel.FirstName)

                <div class="validation-text">Input invalid. Insert validation text here.</div>
            </div>

            <div class="name_container right">
                <label class="">
                    Last Name
                    <span class="asterisk">*</span>
                </label>
                @Html.TextBoxFor(ContactModel => ContactModel.LastName, new { type = "text", required = "required" })
                @Html.ValidationMessageFor(ContactModel => ContactModel.LastName)

                <div class="validation-text">Input invalid. Insert validation text here.</div>
            </div>
        </div>
        <div class="form-row">
            <div class="address_container">
                <label class="">
                    Address
                    <span class="asterisk">*</span>
                </label>
                @Html.TextBoxFor(ContactModel => ContactModel.Address, new { type = "text", required = "required" })
                @Html.ValidationMessageFor(ContactModel => ContactModel.Address)

                <div class="validation-text">Input invalid. Insert validation text here.</div>
            </div>
        </div>
        <div class="form-row">
            <div class="city_container">
                <label class="">
                    City
                    <span class="asterisk">*</span>
                </label>
                @Html.TextBoxFor(ContactModel => ContactModel.City, new { type = "text", required = "required" })
                @Html.ValidationMessageFor(ContactModel => ContactModel.City)

                <div class="validation-text">Input invalid. Insert validation text here.</div>
            </div>

            <div class="state_container">
                <label class="">
                    State
                    <span class="asterisk">*</span>
                </label>
                <div class="select">
                    <span class="arrow">&#xe800;</span>
                    <div class="desktop select_dropdown_parent">
                        <a value="" class="placeholder">&#32;</a>
                        <div class="options_container scrollable select_dropdown">
                            @for (int i = 0; i < Model.StateModelList.Count; i++)
                            {
                                var aValue = Model.StateModelList[i].Abbrev;

                                <li><a class="anchorState" value="@aValue">@aValue</a></li>
                            }
                        </div>
                    </div>

                    <select class="mobile" required>
                        <option disabled selected value=""></option>
                        @for (int i = 0; i < Model.StateModelList.Count; i++)
                        {
                            var aValue = Model.StateModelList[i].Abbrev;

                            <option value="@aValue">@aValue</option>
                        }
                    </select>
                </div>
                @{Model.State = "";}
                @Html.HiddenFor(ContactModel => ContactModel.State, new { id = "hiddenState" })

                <div class="validation-text">Input invalid. Insert validation text here.</div>
            </div>

            <div class="zipcode_container">
                <label class="">
                    Zip Code
                    <span class="asterisk">*</span>
                </label>
                @Html.TextBoxFor(ContactModel => ContactModel.ZipCode, new { type = "text", required = "required" })
                @Html.ValidationMessageFor(ContactModel => ContactModel.ZipCode)
                <div id="zip-validation" class="validation-text">Please enter a valid zipcode</div>
            </div>
        </div>
        <div class="form-row">
            <div class="email_container">
                <label class="">
                    Email Address
                    <span class="asterisk">*</span>
                </label>
                @Html.TextBoxFor(ContactModel => ContactModel.Email, new { type = "email", required = "required" })
                @Html.ValidationMessageFor(ContactModel => ContactModel.Email)

                <div class="validation-text">Input invalid. Insert validation text here.</div>
            </div>
        </div>
        <div class="form-row">
            <div class="phone_container">
                <label class="">
                    Phone Number
                    <span class="asterisk">*</span>
                </label>
                @Html.TextBoxFor(ContactModel => ContactModel.PhoneNumber, new { type = "tel", required = "required" })
                @Html.ValidationMessageFor(ContactModel => ContactModel.PhoneNumber)

                <div class="validation-text">Input invalid. Insert validation text here.</div>
            </div>
        </div>
        <div class="comments_container">
            <label class="">
                Comments
                <span class="asterisk">*</span>
            </label>
            @Html.TextAreaFor(ContactModel => ContactModel.Comments, new { type = "text", required = "required" })
            @Html.ValidationMessageFor(ContactModel => ContactModel.Comments)

            <div class="validation-text">Input invalid. Insert validation text here.</div>
            <div class="required_field">
                <span class="asterisk">*</span>
                <span class="text">Required Fields</span>
            </div>
        </div>

        <div class="captcha">
            @Html.Recaptcha()
        </div>

        <div class="submit_container">
            <input type="submit" value="SUBMIT" />
            <div class="text">
                We respect your privacy. <a href="@UrlBuilder.BuildFullUrl(UrlEnum.PRIVACY_POLICY)">View our policy.</a>
                <br> You can also find us on <a href="https://www.facebook.com/landauuniforms/">Facebook.</a>
            </div>
        </div>
        }
        <!-- FORM End -->

    </div>
</div>

<script src="public/js/logic/contact.js"></script>
